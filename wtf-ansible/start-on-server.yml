- name: Deploy WTF project on Ubuntu server
  hosts: all
  become: yes
  vars_files:
    - secrets.yml

  vars:
    project_dir: /opt/wealth-tracking-framework
    artifactory_registry: "registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework"

  tasks:
    - name: Fail if not running on Ubuntu
      fail:
        msg: "This playbook only supports Ubuntu. Detected {{ ansible_distribution }} {{ ansible_distribution_version }}."
      when: ansible_distribution != "Ubuntu"

    - name: Log into GitLab Container Registry using Vault secrets
      community.docker.docker_login:
        registry_url: "{{ artifactory_registry }}"
        username: "{{ gitlab_user }}"
        password: "{{ gitlab_token }}"

    - name: Pull latest images from GitLab Registry
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        pull: "always"
      register: pull_result
      failed_when: pull_result.failed
      ignore_errors: false

    - name: Stop running containers (ignore errors if none)
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        state: absent
      ignore_errors: true

    - name: Start or restart all services detached (no build)
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        state: present
        build: "never"
      register: up_result
      failed_when: up_result.failed
      ignore_errors: false

    - name: Set permissions for React build directory
      file:
        path: ./wtf-react/build
        mode: '0755'
        recurse: yes

    - name: Ensure NGINX container is up using docker-compose up
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        state: restarted
        services:
          - wtf-nginx  # Ensure the NGINX container is up and restarted

    - name: Wait for frontend proxy health endpoint to respond
      uri:
        url: http://localhost/api/health
        method: GET
        status_code: 200
      register: healthcheck
      retries: 10
      delay: 5
      until: healthcheck.status == 200

    - name: Run database migrations inside node container
      shell: docker exec wtf-node npm run migrate
      register: migrate_result
      retries: 5
      delay: 5
      until: migrate_result.rc == 0

    - name: Confirm deployment success message
      debug:
        msg: "WTF project deployed successfully on {{ inventory_hostname }}"
