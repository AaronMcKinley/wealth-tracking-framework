---
- name: Setup and Deploy WTF Project
  hosts: all
  become: yes
  vars_files:
    - secrets.yml

  vars:
    project_dir: /opt/wealth-tracking-framework
    build_local: false
    external_volume_name: wtf-react-build

  tasks:

    - name: Ensure Docker is installed and running
      import_tasks: docker-setup.yml

    - name: Create project directory
      file:
        path: "{{ project_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Create .env from template
      template:
        src: env.j2
        dest: "{{ project_dir }}/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

    - name: Pull latest Docker images
      command: docker compose pull
      args:
        chdir: "{{ project_dir }}"

    - name: Build local images if enabled
      command: docker compose build
      args:
        chdir: "{{ project_dir }}"
      when: build_local

    - name: Start containers
      command: docker compose up -d
      args:
        chdir: "{{ project_dir }}"

    - name: Create temp container to extract React build
      shell: docker create --name temp-react registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-react:latest
      args:
        chdir: "{{ project_dir }}"
      register: temp_container

    - name: Copy React build from image to host
      shell: docker cp temp-react:/build/. {{ project_dir }}/build
      args:
        chdir: "{{ project_dir }}"

    - name: Remove temp container
      shell: docker rm temp-react
      ignore_errors: yes

    - name: Clear contents of external volume (react build)
      shell: |
        docker run --rm -v {{ external_volume_name }}:/volume busybox sh -c "rm -rf /volume/*"

    - name: Copy updated React build to external volume
      shell: |
        docker run --rm \
          -v {{ external_volume_name }}:/target \
          -v {{ project_dir }}/build:/source \
          busybox \
          cp -r /source/. /target/

    - name: Recreate nginx container to pick up new static files
      shell: |
        docker compose rm -sf wtf-nginx
        docker compose up -d wtf-nginx
      args:
        chdir: "{{ project_dir }}"

    - name: Run DB migrations
      shell: docker compose run --rm wtf-node npm run migrate
      args:
        chdir: "{{ project_dir }}"
      ignore_errors: yes

    - name: Show docker compose service status
      command: docker compose ps
      args:
        chdir: "{{ project_dir }}"
