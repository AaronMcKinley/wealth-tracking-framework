- name: Build and start WTF services locally
  hosts: localhost
  become: false

  tasks:
    - name: Fail if not running on macOS
      fail:
        msg: "This playbook only supports macOS. Detected {{ ansible_system }}."
      when: ansible_system != "Darwin"

    - name: Stop and remove postgres container, then remove volume (optional)
      shell: |
        docker stop wtf-postgres && docker rm wtf-postgres && docker volume rm wealth-tracking-framework_postgres_data
      args:
        chdir: "{{ playbook_dir }}/.."
      when: reset_db | default(false)
      ignore_errors: true
      tags: [setup]

    - name: Build all Docker Compose services
      shell: docker compose -f docker-compose.local.yml build
      args:
        chdir: "{{ playbook_dir }}/.."
      tags: [setup]

    - name: Start core services (PostgreSQL, Adminer, Node, React, Jenkins, Allure)
      shell: docker compose -f docker-compose.local.yml up -d postgres adminer node react jenkins allure
      args:
        chdir: "{{ playbook_dir }}/.."
      tags: [setup]

    - name: Wait for Postgres to respond to pg_isready
      shell: docker exec wtf-postgres pg_isready -U wtfuser
      register: pg_ready
      retries: 30
      delay: 2
      until: pg_ready.rc == 0
      tags: [setup]

    - name: Apply database migrations inside node container
      shell: docker exec wtf-node npm run migrate
      args:
        chdir: "{{ playbook_dir }}/.."
      register: migrate_result
      retries: 5
      delay: 3
      until: migrate_result.rc == 0
      when: reset_db | default(false)
      tags: [setup]

    - name: Start all API fetcher services after migrations complete
      shell: docker compose -f docker-compose.local.yml up -d coingecko finnhub
      args:
        chdir: "{{ playbook_dir }}/.."
      tags: [setup]

    - name: Open Postgres API check in browser (macOS only)
      shell: open http://localhost:4000/api/db-check
      when: ansible_system == "Darwin"
      tags: [open_api_check]

    - name: Open Adminer in browser (macOS only)
      shell: open http://localhost:8081
      when: ansible_system == "Darwin"
      tags: [open_adminer]

    - name: Open React in browser (macOS only)
      shell: open http://localhost:3000
      when: ansible_system == "Darwin"
      tags: [open_ui]

    - name: Open Node test route in browser (macOS only)
      shell: open http://localhost:4000/api/test
      when: ansible_system == "Darwin"
      tags: [open_api_test]

    - name: Open Jenkins in browser (macOS only)
      shell: open http://localhost:8080
      when: ansible_system == "Darwin"
      tags: [open_jenkins]

    - name: Open Allure in browser (macOS only)
      shell: open http://localhost:5050
      when: ansible_system == "Darwin"
      tags: [open_allure]
