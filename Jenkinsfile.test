pipeline {
  agent any

  environment {
    CYPRESS_BASE_URL = "https://wealth-tracking-framework.com"
    ALLURE_DOCKER_SERVICE_URL = "http://localhost:5050"
    ALLURE_PROJECT_ID = "wtf"
    REPORT_NAME = "E2E Tests"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install Dependencies') {
      dir('wtf-cypress') {
        steps {
          sh 'npm ci'
        }
      }
    }

    stage('Run Cypress E2E Tests') {
      dir('wtf-cypress') {
        steps {
          script {
            def exitCode = sh(
              script: """
                npx cypress run \
                  --browser chrome \
                  --config baseUrl=${CYPRESS_BASE_URL},video=false \
                  --spec "cypress/e2e/smoke/**/*.cy.js"
              """,
              returnStatus: true
            )

            if (exitCode != 0) {
              echo "Cypress tests failed"
              currentBuild.result = 'FAILURE'
            } else {
              echo "Cypress tests passed"
            }
          }
        }
      }
    }

    stage('Publish Allure Report') {
      steps {
        script {
          def allureResultsPath = "${env.WORKSPACE}/wtf-cypress/allure-results"
          def allureZipPath = "/tmp/allure-results.zip"

          sh """
            if [ -d "${allureResultsPath}" ] && [ "\$(ls -A ${allureResultsPath})" ]; then
              zip -j ${allureZipPath} ${allureResultsPath}/*
            else
              touch /tmp/dummy_empty_file
              zip -j ${allureZipPath} /tmp/dummy_empty_file
              rm /tmp/dummy_empty_file
            fi
          """

          sh """
            curl -sf -X POST ${ALLURE_DOCKER_SERVICE_URL}/allure-docker-service/projects \
              -H 'Content-Type: application/json' \
              -d '{"id": "${ALLURE_PROJECT_ID}", "name": "${ALLURE_PROJECT_ID} E2E"}' || true
          """

          sh """
            curl -sf -X POST "${ALLURE_DOCKER_SERVICE_URL}/allure-docker-service/send-results?project_id=${ALLURE_PROJECT_ID}" \
              -F "results=@${allureZipPath}" || true
          """

          sh """
            curl -sf -X POST "${ALLURE_DOCKER_SERVICE_URL}/allure-docker-service/generate-report?project_id=${ALLURE_PROJECT_ID}" \
              -H 'Content-Type: application/json' \
              -d '{
                "reportName": "${REPORT_NAME}",
                "buildName": "Build #${BUILD_NUMBER}",
                "buildOrder": "${BUILD_NUMBER}"
              }' || true
          """

          echo "Allure Report: ${ALLURE_DOCKER_SERVICE_URL}/projects/${ALLURE_PROJECT_ID}/reports/latest/index.html"
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: 'wtf-cypress/cypress/videos/**, wtf-cypress/cypress/screenshots/**', allowEmptyArchive: true
    }
  }
}
