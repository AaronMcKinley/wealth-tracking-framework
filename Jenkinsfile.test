pipeline {
  agent any

  options {
    timestamps()
    buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '0'))
  }

  environment {
    CYPRESS_BASE_URL = "https://www.wealth-tracking-framework.com"
    REPORT_NAME      = "E2E Tests"
    CYPRESS_WORKDIR  = "wtf-cypress"
    CYPRESS_IMAGE    = "custom-cypress:13.11"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Cypress Docker Image') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh "docker build --no-cache -t ${CYPRESS_IMAGE} ."
        }
      }
    }

    stage('Run Cypress E2E Tests') {
      steps {
        ansiColor('xterm') {
          sh '''
            mkdir -p "$WORKSPACE/$CYPRESS_WORKDIR/allure-results" \
                     "$WORKSPACE/$CYPRESS_WORKDIR/cypress/screenshots" \
                     "$WORKSPACE/$CYPRESS_WORKDIR/cypress/videos"

            docker run --rm \
              --shm-size=1g \
              -e XDG_RUNTIME_DIR=/tmp \
              -u $(id -u):$(id -g) \
              -e FORCE_COLOR=1 \
              -e CYPRESS_allure=true \
              -e CYPRESS_allureResultsPath=/allure-results \
              -e CYPRESS_baseUrl=$CYPRESS_BASE_URL \
              -v "$WORKSPACE/$CYPRESS_WORKDIR/allure-results:/allure-results" \
              -v "$WORKSPACE/$CYPRESS_WORKDIR/cypress/screenshots:/app/cypress/screenshots" \
              -v "$WORKSPACE/$CYPRESS_WORKDIR/cypress/videos:/app/cypress/videos" \
              $CYPRESS_IMAGE \
              cypress run --e2e --browser chrome --headless --spec "cypress/e2e/infra/robots.e2e.cy.js,cypress/e2e/signup/signup.cy.js,cypress/e2e/login/login.cy.js,cypress/e2e/addinvestment/addinvestment.cy.js,cypress/e2e/savings/savings.cy.js,cypress/e2e/transactions/transactions.cy.js,cypress/e2e/sidebar/sidebar.cy.js,cypress/e2e/sample.cy.js,cypress/e2e/signup/delete-account.cy.js"
          '''
        }
      }
    }

    stage('Allure Report') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          allure([
            results: [[path: 'allure-results']],
            reportBuildPolicy: 'ALWAYS'
          ])
        }
      }
    }

    stage('Docker Cleanup') {
      steps {
        sh '''
          docker builder prune -af --filter "until=24h" || true
          docker image prune   -af --filter "until=24h" || true
          docker container prune -f --filter "until=24h" || true
          docker volume prune -f || true
          docker system df || true
        '''
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: """
        ${CYPRESS_WORKDIR}/cypress/videos/**,
        ${CYPRESS_WORKDIR}/cypress/screenshots/**,
        ${CYPRESS_WORKDIR}/allure-results/**,
        ${CYPRESS_WORKDIR}/allure-report/**
      """, excludes: '**/node_modules/**', allowEmptyArchive: true
      cleanWs(deleteDirs: true)
    }
  }
}
