pipeline {
  agent any

  environment {
    CYPRESS_BASE_URL = "https://wealth-tracking-framework.com"
    REPORT_NAME      = "E2E Tests"
    CYPRESS_WORKDIR  = "wtf-cypress"
    CYPRESS_IMAGE    = "custom-cypress:13.11"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Cypress Docker Image') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh "docker build --no-cache -t ${CYPRESS_IMAGE} ."
        }
      }
    }

    stage('Run Cypress E2E Tests') {
      steps {
        ansiColor('xterm') {
          script {
            sh """
              mkdir -p "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos"
            """

            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              sh """
                docker run --rm \
                  -u \$(id -u):\$(id -g) \
                  -e FORCE_COLOR=1 \
                  -e CYPRESS_allure=true \
                  -e CYPRESS_allureResultsPath=/allure-results \
                  -e CYPRESS_baseUrl=${CYPRESS_BASE_URL} \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results:/allure-results" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots:/app/cypress/screenshots" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos:/app/cypress/videos" \
                  ${CYPRESS_IMAGE} \
                  /bin/bash -lc '
                    set -e

                    echo "[1/4] Signup spec"
                    cypress run --e2e --browser chrome --headless --spec cypress/e2e/signup/signup.cy.js

                    echo "[2/4] Login spec"
                    cypress run --e2e --browser chrome --headless --spec cypress/e2e/login/login.cy.js

                    echo "[3/4] Rest of specs (excluding signup/, login/, and delete-account)"
                    REST_SPECS=\$(find cypress/e2e \\
                      \\( -name "*.cy.js" -o -name "*.cy.ts" -o -name "*.cy.jsx" -o -name "*.cy.tsx" \\) \\
                      ! -path "cypress/e2e/signup/*" \\
                      ! -path "cypress/e2e/login/*" \\
                      ! -path "cypress/e2e/signup/delete-account.cy.*" \\
                      -print | sort | paste -sd, -)

                    if [ -n "\$REST_SPECS" ]; then
                      cypress run --e2e --browser chrome --headless --spec "\$REST_SPECS"
                    else
                      echo "No remaining specs to run."
                    fi

                    echo "[4/4] Delete-account spec"
                    if [ -f cypress/e2e/signup/delete-account.cy.js ]; then
                      cypress run --e2e --browser chrome --headless --spec cypress/e2e/signup/delete-account.cy.js
                    else
                      echo "Delete-account spec not found, skipping."
                    fi
                  '
              """
            }

            sh """
              echo "Allure results count:"
              ls -1 "${CYPRESS_WORKDIR}/allure-results" | wc -l || true
            """
          }
        }
      }
    }

    stage('Allure Report') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          allure([
            results: [[path: 'allure-results']],
            reportBuildPolicy: 'ALWAYS'
          ])
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: """
        ${CYPRESS_WORKDIR}/cypress/videos/**,
        ${CYPRESS_WORKDIR}/cypress/screenshots/**,
        ${CYPRESS_WORKDIR}/allure-results/**,
        ${CYPRESS_WORKDIR}/allure-report/**
      """, excludes: '**/node_modules/**', allowEmptyArchive: true
    }
  }
}
