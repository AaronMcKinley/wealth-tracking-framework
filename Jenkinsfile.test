pipeline {
  agent any

  environment {
    CYPRESS_BASE_URL = "https://wealth-tracking-framework.com"
    REPORT_NAME      = "E2E Tests"
    CYPRESS_WORKDIR  = "wtf-cypress"
    CYPRESS_IMAGE    = "custom-cypress:13.11"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Cypress Docker Image') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh "docker build --no-cache -t ${CYPRESS_IMAGE} ."
        }
      }
    }

    stage('Run Cypress E2E Tests') {
      steps {
        ansiColor('xterm') {
          script {
            sh """
              mkdir -p "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos"
            """

            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              sh """
                docker run --rm \
                  -u \$(id -u):\$(id -g) \
                  -e FORCE_COLOR=1 \
                  -e CYPRESS_allure=true \
                  -e CYPRESS_allureResultsPath=/allure-results \
                  -e CYPRESS_baseUrl=${CYPRESS_BASE_URL} \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results:/allure-results" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots:/app/cypress/screenshots" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos:/app/cypress/videos" \
                  ${CYPRESS_IMAGE} bash -s <<'EOS'
              set -e
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/signup/signup.cy.js
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/login/login.cy.js
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/addinvestment/addinvestment.cy.js
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/sidebar/sidebar.cy.js
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/transactions/transactions.sol.cy.js
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/sample.cy.js
              cypress run --e2e --browser chrome --headless --spec cypress/e2e/signup/delete-account.cy.js
              EOS
              """
            }

            sh """
              echo "Allure results count:"
              ls -1 "${CYPRESS_WORKDIR}/allure-results" | wc -l || true
            """
          }
        }
      }
    }

    stage('Allure Report') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          allure([
            results: [[path: 'allure-results']],
            reportBuildPolicy: 'ALWAYS'
          ])
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: """
        ${CYPRESS_WORKDIR}/cypress/videos/**,
        ${CYPRESS_WORKDIR}/cypress/screenshots/**,
        ${CYPRESS_WORKDIR}/allure-results/**,
        ${CYPRESS_WORKDIR}/allure-report/**
      """, excludes: '**/node_modules/**', allowEmptyArchive: true
    }
  }
}
