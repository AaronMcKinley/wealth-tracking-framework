pipeline {
  agent any
  environment {
    CYPRESS_BASE_URL = "https://wealth-tracking-framework.com"
    REPORT_NAME      = "Smoke Tests"
    CYPRESS_WORKDIR  = "wtf-cypress"
    CYPRESS_IMAGE    = "custom-cypress:13.11"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Build Cypress Docker Image') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh "docker build --no-cache -t ${CYPRESS_IMAGE} ."
        }
      }
    }

    stage('Run Cypress Smoke Tests') {
      steps {
        ansiColor('xterm') {
          script {
            sh """
              mkdir -p "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos"
            """
            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              sh """
                docker rm -f cypress_dbg || true
                docker run --name cypress_dbg \
                  -u \$(id -u):\$(id -g) \
                  -e FORCE_COLOR=1 \
                  -e CYPRESS_allure=true \
                  -e CYPRESS_allureResultsPath=/allure-results \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results:/allure-results" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots:/app/cypress/screenshots" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos:/app/cypress/videos" \
                  ${CYPRESS_IMAGE} \
                  sh -c "cypress run --e2e --browser chrome --headless --spec 'smoke/**/*.cy.js' --config '{\\"baseUrl\\":\\"${CYPRESS_BASE_URL}\\"}'; tail -f /dev/null"
              """
            }
            sh 'echo "Allure results count:" && ls -1 "${CYPRESS_WORKDIR}/allure-results" | wc -l || true'
          }
        }
      }
    }

    stage('Allure Report') {
      steps {
        allure([
          results: [[path: "${CYPRESS_WORKDIR}/allure-results"]]
        ])
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: "${CYPRESS_WORKDIR}/cypress/videos/**,${CYPRESS_WORKDIR}/cypress/screenshots/**", allowEmptyArchive: true
    }
  }
}
