pipeline {
  agent any
  environment {
    CYPRESS_BASE_URL = "https://wealth-tracking-framework.com"
    REPORT_NAME      = "Smoke Tests"
    CYPRESS_WORKDIR  = "wtf-cypress"
    CYPRESS_IMAGE    = "custom-cypress:13.11"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Build Cypress Docker Image') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh "docker build -t ${CYPRESS_IMAGE} ."
        }
      }
    }

    stage('Run Cypress Smoke Tests') {
      steps {
        ansiColor('xterm') {
          script {
            sh """
              mkdir -p "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots" \
                       "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos"
            """
            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              sh """
                docker run --rm \
                  -u \$(id -u):\$(id -g) \
                  -e FORCE_COLOR=1 \
                  -e CYPRESS_allure=true \
                  -e CYPRESS_allureResultsPath=/app/allure-results \
                  -e CYPRESS_baseUrl='${CYPRESS_BASE_URL}' \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/allure-results:/app/allure-results" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots:/app/cypress/screenshots" \
                  -v "${WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos:/app/cypress/videos" \
                  ${CYPRESS_IMAGE} \
                    cypress run \
                      --e2e \
                      --browser chrome \
                      --headless \
                      --reporter spec \
                      --spec 'smoke/**/*.cy.js' \
              """
            }
          }
        }
      }
    }

    stage('Allure Report') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh 'test -d .allure-history && cp -r .allure-history history || true'
          sh 'npx -p allure-commandline@2.29.0 allure generate --clean allure-results -o allure-report || true'
          sh 'rm -rf .allure-history && mkdir -p .allure-history && cp -r allure-report/history .allure-history || true'
        }
        publishHTML(target: [
          allowMissing: true,
          alwaysLinkToLastBuild: true,
          keepAll: true,
          reportDir: "${CYPRESS_WORKDIR}/allure-report",
          reportFiles: "index.html",
          reportName: "Allure Smoke"
        ])
        echo "Allure report: ${env.BUILD_URL}Allure_20Smoke/"
      }
    }


  post {
    always {
      archiveArtifacts artifacts: "${CYPRESS_WORKDIR}/cypress/videos/**,${CYPRESS_WORKDIR}/cypress/screenshots/**", allowEmptyArchive: true
    }
  }
}
