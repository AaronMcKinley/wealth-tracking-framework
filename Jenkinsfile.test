pipeline {
  agent any

  environment {
    CYPRESS_BASE_URL = "https://wealth-tracking-framework.com"
    ALLURE_DOCKER_SERVICE_URL = "http://localhost:5050"
    ALLURE_PROJECT_ID = "wtf"
    REPORT_NAME = "E2E Tests"
    CYPRESS_WORKDIR = "wtf-cypress"
    CYPRESS_IMAGE = "custom-cypress:13.11"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Cypress Docker Image') {
      steps {
        dir("${CYPRESS_WORKDIR}") {
          sh "docker build -t ${CYPRESS_IMAGE} ."
        }
      }
    }

    stage('Run Cypress Smoke Tests') {
      steps {
        script {
          sh """
            docker run --rm \
              -e FORCE_COLOR=1 \
              -v ${env.WORKSPACE}/${CYPRESS_WORKDIR}/allure-results:/app/allure-results \
              -v ${env.WORKSPACE}/${CYPRESS_WORKDIR}/cypress/screenshots:/app/cypress/screenshots \
              -v ${env.WORKSPACE}/${CYPRESS_WORKDIR}/cypress/videos:/app/cypress/videos \
              ${CYPRESS_IMAGE} \
              cypress run \
                --e2e \
                --browser chrome \
                --headless \
                --spec 'smoke/**/*.cy.js'
          """
        }
      }
    }

    stage('Publish Allure Report') {
      steps {
        script {
          def allureResultsPath = "${env.WORKSPACE}/${CYPRESS_WORKDIR}/allure-results"
          def allureZipPath = "/tmp/allure-results.zip"

          sh """
            if [ -d "${allureResultsPath}" ] && [ "\$(ls -A ${allureResultsPath})" ]; then
              zip -j ${allureZipPath} ${allureResultsPath}/*
            else
              touch /tmp/dummy_empty_file
              zip -j ${allureZipPath} /tmp/dummy_empty_file
              rm /tmp/dummy_empty_file
            fi
          """

          sh """
            curl -sf -X POST ${ALLURE_DOCKER_SERVICE_URL}/allure-docker-service/projects \
              -H 'Content-Type: application/json' \
              -d '{"id": "${ALLURE_PROJECT_ID}", "name": "${ALLURE_PROJECT_ID} E2E"}' || true
          """

          sh """
            curl -sf -X POST "${ALLURE_DOCKER_SERVICE_URL}/allure-docker-service/send-results?project_id=${ALLURE_PROJECT_ID}" \
              -F "results=@${allureZipPath}" || true
          """

          sh """
            curl -sf -X POST "${ALLURE_DOCKER_SERVICE_URL}/allure-docker-service/generate-report?project_id=${ALLURE_PROJECT_ID}" \
              -H 'Content-Type: application/json' \
              -d '{
                "reportName": "${REPORT_NAME}",
                "buildName": "Build #${BUILD_NUMBER}",
                "buildOrder": "${BUILD_NUMBER}"
              }' || true
          """

          echo "Allure Report: ${ALLURE_DOCKER_SERVICE_URL}/projects/${ALLURE_PROJECT_ID}/reports/latest/index.html"
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: "${CYPRESS_WORKDIR}/cypress/videos/**,${CYPRESS_WORKDIR}/cypress/screenshots/**", allowEmptyArchive: true
    }
  }
}
