pipeline {
  agent any

  environment {
    REGISTRY_URL = "registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework"
    GITLAB_USER  = "aaron09912"
  }

  stages {
    stage('Setup Buildx & QEMU') {
      steps {
        sh '''
          set -e
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            URL="https://github.com/docker/buildx/releases/latest/download/buildx-linux-amd64"
          else
            URL="https://github.com/docker/buildx/releases/latest/download/buildx-linux-arm64"
          fi
          mkdir -p ~/.docker/cli-plugins
          curl -SL "$URL" -o ~/.docker/cli-plugins/docker-buildx
          chmod +x ~/.docker/cli-plugins/docker-buildx
          docker buildx create --use || true
          docker run --rm --privileged tonistiigi/binfmt --install amd64 || true
          docker buildx inspect --bootstrap
        '''
      }
    }

    stage('Login to Registry') {
      steps {
        withCredentials([string(credentialsId: 'gitlab-registry-pat', variable: 'GITLAB_PAT')]) {
          sh '''
            echo "$GITLAB_PAT" | docker login registry.gitlab.com \
              -u "$GITLAB_USER" --password-stdin
          '''
        }
      }
    }

    stage('Build and Push Images') {
      steps {
        sh '''
          set -e
          docker buildx build --platform linux/amd64 \
            -t "${REGISTRY_URL}/wtf-node:latest" --push ./wtf-node
          docker buildx build --platform linux/amd64 \
            -t "${REGISTRY_URL}/wtf-react:latest" --push ./wtf-react
          docker buildx build --platform linux/amd64 \
            -t "${REGISTRY_URL}/wtf-coingecko:latest" --push ./wtf-coingecko
          docker buildx build --platform linux/amd64 \
            -t "${REGISTRY_URL}/wtf-finnhub:latest" --push ./wtf-finnhub
          docker buildx build --platform linux/amd64 \
            -t "${REGISTRY_URL}/wtf-jenkins:latest" --push ./wtf-jenkins
        '''
      }
    }
  }
}
