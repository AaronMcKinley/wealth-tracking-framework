pipeline {
    agent any

    environment {
        REGISTRY = "registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework"
        COMPOSE_PROJECT_NAME = "wtf-app"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/AaronMcKinley/wealth-tracking-framework.git'
            }
        }

        stage('Login to GitLab Registry') {
            steps {
                withCredentials([string(credentialsId: 'gitlab-registry-pat', variable: 'GITLAB_PAT')]) {
                    sh '''
                        echo "$GITLAB_PAT" | docker login registry.gitlab.com -u aaron09912 --password-stdin
                    '''
                }
            }
        }

        stage('Inject PostgreSQL Credentials') {
            steps {
                withCredentials([
                    string(credentialsId: 'PGUSER', variable: 'PGUSER'),
                    string(credentialsId: 'PGPASSWORD', variable: 'PGPASSWORD'),
                    string(credentialsId: 'PGDATABASE', variable: 'PGDATABASE'),
                    string(credentialsId: 'PGHOST', variable: 'PGHOST')
                ]) {
                    // Dynamically generate the .env file with PostgreSQL credentials
                    script {
                        sh """
                            echo "PGUSER=\$PGUSER" > .env
                            echo "PGPASSWORD=\$PGPASSWORD" >> .env
                            echo "PGDATABASE=\$PGDATABASE" >> .env
                            echo "PGHOST=\$PGHOST" >> .env
                        """
                    }
                }
            }
        }

        stage('Build Docker Images with Docker Compose') {
            steps {
                script {
                    sh """
                        docker compose -f docker-compose.yml build --no-cache
                    """
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    sh """
                        docker compose -f docker-compose.yml push
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Build and push completed successfully.'
        }
        failure {
            echo 'Build failed. Check logs above for more details.'
        }
    }
}
