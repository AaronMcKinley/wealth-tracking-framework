services:
  wtf-nginx:
    image: nginx:alpine
    container_name: wtf-nginx
    ports:
      - "443:443"
    volumes:
      - ./wtf-nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - wtf-react-build:/usr/share/nginx/html:ro
      - /var/lib/docker/volumes/certbot-etc/_data:/etc/letsencrypt:ro
    depends_on:
      - wtf-react
      - wtf-node
    networks:
      - wtfnet

  wtf-react:
    build:
      context: ./wtf-react
    image: registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-react:latest
    container_name: wtf-react
    volumes:
      - wtf-react-build:/build
    networks:
      - wtfnet
    depends_on:
      wtf-node:
        condition: service_healthy

  wtf-node:
    build:
      context: ./wtf-node
    image: registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-node:latest
    container_name: wtf-node
    env_file:
      - .env
    networks:
      - wtfnet
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  wtf-finnhub:
    build:
      context: ./wtf-finnhub
    image: registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-finnhub:latest
    container_name: wtf-finnhub
    env_file:
      - .env
    networks:
      - wtfnet
    depends_on:
      - wtf-node
      - wtf-postgres

  wtf-coingecko:
    build:
      context: ./wtf-coingecko
    image: registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-coingecko:latest
    container_name: wtf-coingecko
    env_file:
      - .env
    networks:
      - wtfnet
    depends_on:
      - wtf-node
      - wtf-postgres

  wtf-postgres:
    image: postgres:15
    container_name: wtf-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wtfnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${PGUSER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  wtf-certbot-renew:
    image: certbot/certbot
    container_name: certbot-renew
    entrypoint: |
      /bin/sh -c '
        trap exit TERM;
        while true; do
          echo "[Certbot] Checking for renewal...";
          certbot renew --quiet --deploy-hook "nginx -s reload";
          sleep 12h;
        done
      '
    volumes:
      - certbot-etc:/etc/letsencrypt
      - /var/lib/docker/volumes/certbot-etc/_data:/etc/letsencrypt
      - wtf-react-build:/usr/share/nginx/html:ro
    depends_on:
      - wtf-nginx
    networks:
      - wtfnet

volumes:
  postgres_data:
  certbot-etc:
  wtf-react-build:
    external: true

networks:
  wtfnet:
    driver: bridge
