services:
  wtf-nginx:
    image: nginx:alpine
    container_name: wtf-nginx
    volumes:
      - ./wtf-nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - wtf-react-build:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - wtf-react
      - wtf-node
      - wtf-jenkins
    networks:
      - wtfnet

  wtf-react:
    build:
      context: ./wtf-react
    container_name: wtf-react
    environment:
      - CHOKIDAR_USEPOLLING=true
      - HOST=0.0.0.0
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    volumes:
      - wtf-react-build:/usr/share/nginx/html
    networks:
      - wtfnet
    depends_on:
      wtf-node:
        condition: service_healthy
    mem_limit: 1.5g
    mem_reservation: 1g

  wtf-node:
    image: registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-node:latest
    container_name: wtf-node
    env_file:
      - .env
    networks:
      - wtfnet
    mem_limit: 1.5g
    mem_reservation: 1g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  wtf-jenkins:
    image: registry.gitlab.com/wealth-tracking-framework/wealth-tracking-framework/wtf-jenkins:latest
    container_name: wtf-jenkins
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    networks:
      - wtfnet

  postgres:
    image: postgres:15
    container_name: wtf-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wtfnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${PGUSER}"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  jenkins_data:
  wtf-react-build:

networks:
  wtfnet:
    driver: bridge
