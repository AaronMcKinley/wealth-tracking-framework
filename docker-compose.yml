version: '3.8'

services:
  react-ui:
    build: ./react-ui
    container_name: wtf-react
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./react-ui:/app
    working_dir: /app
    command: sh -c "npm install && npm start"

  node-api:
    build: ./node-api
    container_name: wtf-api
    ports:
      - "4000:${PORT}"
    volumes:
      - ./node-api:/app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
      PORT: ${PORT}
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: wtf-postgres
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  jenkins:
    build: ./jenkins
    container_name: wtf-jenkins
    ports:
      - "8080:8080"
    volumes:
      - ./jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  allure:
    image: frankescobar/allure-docker-service
    container_name: wtf-allure
    ports:
      - "5050:5050"
    volumes:
      - ./cypress/allure-results:/app/allure-results

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  coingecko:
    build: ./coingecko
    container_name: coingecko
    restart: always
    volumes:
      - ./coingecko/data:/app/data
    environment:
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
    depends_on:
      - postgres

volumes:
  jenkins_home:
  postgres_data:
