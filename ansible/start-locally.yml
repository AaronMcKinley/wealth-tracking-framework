- name: Build and start WTF services
  hosts: localhost
  become: false

  tasks:
  - name: Stop and remove postgres container, then remove volume (optional)
    shell: |
      docker stop wtf-postgres && docker rm wtf-postgres && docker volume rm wealth-tracking-framework_postgres_data
    args:
      chdir: "{{ playbook_dir }}/.."
    when: reset_db | default(false)
    ignore_errors: true
    tags: [setup]

  - name: Build all Docker Compose services
    shell: docker compose build
    args:
      chdir: "{{ playbook_dir }}/.."
    tags: [setup]

  - name: Start core services (PostgreSQL, Adminer, Node API, React UI, Jenkins, Allure)
    shell: docker compose up -d postgres adminer node-api react-ui jenkins allure
    args:
      chdir: "{{ playbook_dir }}/.."
    tags: [setup]

  - name: Wait for Postgres to respond to pg_isready
    shell: docker exec wtf-postgres pg_isready -U wtfuser
    register: pg_ready
    retries: 30
    delay: 2
    until: pg_ready.rc == 0
    tags: [setup]

  - name: Apply database migrations inside node-api container
    shell: docker exec wtf-api npm run migrate
    args:
      chdir: "{{ playbook_dir }}/.."
    register: migrate_result
    retries: 5
    delay: 3
    until: migrate_result.rc == 0
    when: reset_db | default(false)
    tags: [setup]

  - name: Start all API fetcher services after migrations complete
    shell: docker compose up -d coingecko finnhub
    args:
      chdir: "{{ playbook_dir }}/.."
    tags: [setup]

  - name: Open Postgres API check in browser (macOS only)
    shell: open http://localhost:4000/api/db-check
    when: ansible_system == "Darwin"
    tags: [open_api_check]

  - name: Open Adminer in browser (macOS only)
    shell: open http://localhost:8081
    when: ansible_system == "Darwin"
    tags: [open_adminer]

  - name: Open React UI in browser (macOS only)
    shell: open http://localhost:3000
    when: ansible_system == "Darwin"
    tags: [open_ui]

  - name: Open Node API test route in browser (macOS only)
    shell: open http://localhost:4000/api/test
    when: ansible_system == "Darwin"
    tags: [open_api_test]

  - name: Open Jenkins in browser (macOS only)
    shell: open http://localhost:8080
    when: ansible_system == "Darwin"
    tags: [open_jenkins]

  - name: Open Allure in browser (macOS only)
    shell: open http://localhost:5050
    when: ansible_system == "Darwin"
    tags: [open_allure]
