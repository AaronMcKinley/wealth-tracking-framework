version: '3.8'

services:
  react:
    build:
      context: ./wtf-react
      dockerfile: Dockerfile.dev
    container_name: wtf-react
    ports:
      - '3000:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - HOST=0.0.0.0
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    networks:
      - wtfnet
    command: ['npm', 'start']
    mem_limit: 1.5g
    mem_reservation: 1g
    # ⚠️ dropped the `depends_on` health condition so React always starts

  node:
    build:
      context: ./wtf-node
      dockerfile: Dockerfile.dev # ← point at your dev‐Dockerfile
    container_name: wtf-node
    ports:
      - '4000:5000'
    volumes:
      - ./wtf-node:/app
      - /app/node_modules
    working_dir: /app
    command: sh -c "npm ci && npm run dev"
    env_file:
      - .env
    networks:
      - wtfnet
    mem_limit: 1.5g
    mem_reservation: 1g
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/api/health']
      interval: 10s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15
    container_name: wtf-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${PGUSER}']
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - wtfnet

  jenkins:
    build:
      context: ./wtf-jenkins
    container_name: wtf-jenkins
    ports:
      - '8080:8080'
    volumes:
      - ./jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - allure_results:/wtf/allure-results
    user: root
    mem_limit: 4g
    networks:
      - wtfnet

  allure:
    image: frankescobar/allure-docker-service
    container_name: wtf-allure
    ports:
      - '5050:5050'
    volumes:
      - allure_results:/app/allure-results
    networks:
      - wtfnet

  adminer:
    image: adminer
    container_name: wtf-adminer
    restart: always
    ports:
      - '8081:8080'
    networks:
      - wtfnet

  coingecko:
    build:
      context: ./wtf-coingecko
    container_name: wtf-coingecko
    restart: always
    volumes:
      - ./wtf-coingecko/data:/app/data
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - wtfnet

  finnhub:
    build:
      context: ./wtf-finnhub
    container_name: wtf-finnhub
    restart: always
    volumes:
      - ./wtf-finnhub/data:/app/data
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - postgres
    command: sh -c "npm ci && npm run fetch"
    networks:
      - wtfnet

volumes:
  jenkins_home:
  postgres_data:
  allure_results:

networks:
  wtfnet:
    name: wtfnet
    driver: bridge
